# -*- coding: utf-8 -*-
"""Untitled8.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1VG5ebgyE1Lr4A6YUdc785yyc_VbjPfp1
"""

!pip install pandas matplotlib seaborn

# Import libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# Set style for visualization
sns.set(style="whitegrid")

# Load Titanic dataset from Seaborn
titanic = sns.load_dataset('titanic')

# Display first few rows
print(titanic.head())

import pandas as pd
import requests
import zipfile
import os

# Step 1: Define the URL and the target filename
url = "https://web.stanford.edu/class/archive/cs/cs109/cs109.1166/stuff/titanic.csv"
file_name = "titanic.csv"

# Step 2: Download the dataset
print("Downloading Titanic dataset...")
response = requests.get(url)

# Save the file locally
with open(file_name, "wb") as file:
    file.write(response.content)
print(f"Dataset downloaded as '{file_name}'.")

# Step 3: Load the dataset
print("Loading dataset into a DataFrame...")
titanic_df = pd.read_csv(file_name)

# Step 4: Display the first few rows
print("First 5 rows of the Titanic dataset:")
print(titanic_df.head())

# Step 5: Verify the columns and shape
print("\nDataset Information:")
print(titanic_df.info())
print(f"\nDataset contains {titanic_df.shape[0]} rows and {titanic_df.shape[1]} columns.")

# Check the size of the dataset
print(f"Dataset contains {titanic.shape[0]} rows and {titanic.shape[1]} columns.")

# Check column information
print(titanic.info())

# Check for missing values
print(titanic.isnull().sum())

# Step 5: Drop unnecessary columns
# Check if 'deck' column exists and drop it
if 'deck' in titanic.columns:
    titanic = titanic.drop(columns=['deck'])
else:
    print("\nColumn 'deck' does not exist in the dataset.")

# Step 6: Verify missing values after cleaning
print("\nMissing Values after cleaning:")
print(titanic.isnull().sum())

# Step 7: EDA - Basic insights
print("\nBasic Information:")
print(titanic.info())

print("\nSummary Statistics:")
print(titanic.describe())

print(titanic.describe())

# Missing data heatmap
plt.figure(figsize=(10, 6))
sns.heatmap(titanic.isnull(), cbar=False, cmap='viridis')
plt.title("Missing Values Heatmap")
plt.show()

sns.histplot(titanic['age'], bins=20, kde=True, color='blue')
plt.title("Age Distribution")
plt.show()

# Count of passengers by class
sns.countplot(x='pclass', data=titanic, hue='survived', palette='muted')

plt.title("Passenger Count by Class")
plt.show()

sns.barplot(x='pclass', y='survived', data=titanic, errorbar=None, hue='pclass', palette='coolwarm', legend=False)



plt.title("Survival Rate by Passenger Class")
plt.show()

# Survival distribution by gender
sns.countplot(x='sex', hue='survived', data=titanic, palette='Set1')
plt.title("Survival Count by Gender")
plt.show()

sns.pairplot(titanic[['age', 'fare', 'survived']], hue='survived', palette='husl')
plt.show()

numerical_data = titanic.select_dtypes(include=['float64', 'int64'])

# Plot the correlation heatmap
plt.figure(figsize=(8, 6))
sns.heatmap(numerical_data.corr(), annot=True, cmap='coolwarm')
plt.title("Correlation Heatmap")
plt.show()